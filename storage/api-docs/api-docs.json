{
    "openapi": "3.0.0",
    "info": {
        "title": "T&C API",
        "version": "0.0.1"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Logs in a user with email and password",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "your_access_token"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user with the provided information",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "User registration details",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "your_access_token"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "description": "Get information about the authenticated user",
                "operationId": "getUserProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Logs out the authenticated user",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh User Token",
                "description": "Refreshes the user's JWT token",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token successfully refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "your_refreshed_access_token"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Token refresh failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Token refresh failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password/forgot": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Forgot Password",
                "description": "Initiates the forgot password process and sends a reset link to the user's email address.",
                "operationId": "forgotPassword",
                "requestBody": {
                    "description": "User email",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "A reset link has been sent to your email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - User with provided email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset Password",
                "description": "Resets user's password based on the provided token.",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "Reset password details",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset_token_here"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new_password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "new_access_token"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Incorrect token, please try again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Incorrect token, please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/clinics": {
            "get": {
                "tags": [
                    "Clinics"
                ],
                "summary": "Get All Clinics",
                "description": "Displays a listing of all clinics.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All clinics fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All clinics fetched successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ClinicResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "pagination": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Clinics"
                ],
                "summary": "Create a Clinic",
                "description": "Stores a newly created clinic.",
                "operationId": "store",
                "requestBody": {
                    "description": "Clinic details",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "city",
                                    "country_id",
                                    "category_ids"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Clinic Name"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Clinic Address"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Clinic City"
                                    },
                                    "latitude": {
                                        "type": "string",
                                        "example": "Clinic Latitude"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "example": "Clinic Longitude"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "category_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Clinic created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clinic created successfully!"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ClinicResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/clinics/{clinic}": {
            "get": {
                "tags": [
                    "Clinics"
                ],
                "summary": "Get a Specific Clinic",
                "description": "Displays information about a specific clinic.",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "clinic",
                        "in": "path",
                        "description": "ID of the clinic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clinic fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clinic fetched successfully!"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ClinicResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Clinic not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Clinic not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Clinics"
                ],
                "summary": "Update a Clinic",
                "description": "Updates the specified clinic.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "clinic",
                        "in": "path",
                        "description": "ID of the clinic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated clinic details",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Clinic Name"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Updated Clinic Address"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "example": "54321"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Updated Clinic City"
                                    },
                                    "latitude": {
                                        "type": "string",
                                        "example": "Updated Clinic Latitude"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "example": "Updated Clinic Longitude"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Clinic updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clinic updated successfully!"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ClinicResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Clinic not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Clinic not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clinics"
                ],
                "summary": "Delete a Clinic",
                "description": "Removes the specified clinic.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "clinic",
                        "in": "path",
                        "description": "ID of the clinic",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clinic deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clinic deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Clinic not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Clinic not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CategoryResource": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "en": {
                        "type": "string"
                    },
                    "hr": {
                        "type": "string"
                    },
                    "subcategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryResource"
                        }
                    }
                },
                "type": "object"
            },
            "ClinicResource": {
                "title": "Clinic Resource",
                "description": "Represents a clinic in the system.",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the clinic.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the clinic.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the clinic.",
                        "type": "string"
                    },
                    "address": {
                        "description": "The address of the clinic.",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "The postcode of the clinic.",
                        "type": "string"
                    },
                    "city": {
                        "description": "The city where the clinic is located.",
                        "type": "string"
                    },
                    "country_name": {
                        "description": "The name of the country where the clinic is located.",
                        "type": "string"
                    },
                    "phone": {
                        "description": "The phone number of the clinic.",
                        "type": "string"
                    },
                    "mobile": {
                        "description": "The mobile phone number of the clinic.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the clinic.",
                        "type": "string",
                        "format": "email"
                    },
                    "web": {
                        "description": "The website of the clinic.",
                        "type": "string"
                    },
                    "contact_person": {
                        "description": "The contact person of the clinic.",
                        "type": "string"
                    },
                    "contact_phone": {
                        "description": "The contact phone number of the clinic.",
                        "type": "string"
                    },
                    "contact_email": {
                        "description": "The contact email address of the clinic.",
                        "type": "string",
                        "format": "email"
                    },
                    "latitude": {
                        "description": "The latitude of the clinic location.",
                        "type": "string"
                    },
                    "longitude": {
                        "description": "The longitude of the clinic location.",
                        "type": "string"
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "updated_by": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "logo_image": {
                        "description": "The path to the logo image of the clinic.",
                        "type": "string"
                    },
                    "categories": {
                        "description": "The categories associated with the clinic.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryResource"
                        }
                    }
                },
                "type": "object"
            },
            "ContactResource": {
                "title": "Contact Resource",
                "description": "Represents a contact in the system.",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the contact.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the contact.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EmployeeResource": {
                "title": "Employee Resource",
                "description": "Represents an employee in the system.",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the employee.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the employee.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the employee.",
                        "type": "string",
                        "format": "email"
                    },
                    "clinic": {
                        "$ref": "#/components/schemas/ClinicResource"
                    },
                    "role": {
                        "description": "The role of the employee.",
                        "type": "string"
                    },
                    "permissions": {
                        "description": "The permissions assigned to the employee.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the employee.",
                        "type": "string"
                    },
                    "phone": {
                        "description": "The phone number of the employee.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of the employee.",
                        "type": "string"
                    },
                    "picture": {
                        "description": "The path to the picture of the employee.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventResource": {
                "title": "Event Resource",
                "description": "Represents an event in the system.",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the event.",
                        "type": "string"
                    },
                    "start_time": {
                        "description": "The start time of the event.",
                        "type": "string"
                    },
                    "end_time": {
                        "description": "The end time of the event.",
                        "type": "string"
                    },
                    "title": {
                        "description": "The title of the event.",
                        "type": "string"
                    },
                    "location": {
                        "description": "The location of the event.",
                        "type": "string"
                    },
                    "data": {
                        "description": "Additional data related to the event.",
                        "type": "string"
                    },
                    "employees": {
                        "description": "List of employees associated with the event.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmployeeResource"
                        }
                    }
                },
                "type": "object"
            },
            "InquiryResource": {
                "title": "Inquiry Resource",
                "description": "Represents an inquiry in the system.",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the inquiry.",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "category": {
                        "$ref": "#/components/schemas/CategoryResource"
                    },
                    "form_json": {
                        "description": "JSON representation of the inquiry form.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MessageResourceCollection": {
                "title": "Message Resource Collection",
                "description": "Represents a collection of messages for a contact.",
                "properties": {
                    "contact_id": {
                        "description": "The unique identifier of the contact.",
                        "type": "integer"
                    },
                    "contact_name": {
                        "description": "The name of the contact.",
                        "type": "string"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "The unique identifier of the message.",
                                    "type": "integer"
                                },
                                "message": {
                                    "description": "The content of the message.",
                                    "type": "string"
                                },
                                "timestamp": {
                                    "description": "The timestamp when the message was created.",
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "incoming": {
                                    "description": "Indicates whether the message is incoming or outgoing.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "Represents a user.",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the user.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the user.",
                        "type": "string",
                        "format": "email"
                    },
                    "clinic": {
                        "$ref": "#/components/schemas/ClinicResource"
                    },
                    "role": {
                        "description": "The role of the user.",
                        "type": "string"
                    },
                    "permissions": {
                        "description": "The permissions assigned to the user.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}